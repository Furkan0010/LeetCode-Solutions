/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsSameTree(TreeNode p, TreeNode q) {
        
        if(p.left == null && q.left == null && p.right == null && q.right == null && p.val == q.val){
           return true;
        }
        else if ((p.left == null && q.left != null)||(p.left != null && q.left ==null)||(p.right == null && q.right != null)||(p.right != null && q.right ==null)){
           return false;
        }
        else if (p.left != null && q.left != null && p.right != null && q.right !=null){
           if(p.val==q.val && p.left.val == q.left.val && p.right.val == q.right.val){
              return true;
           }
           return false;
        }
        return false;
}}


//gpt çözümü 

public class Solution {
    public bool IsSameTree(TreeNode p, TreeNode q) {

     if(p == null && q == null) return true;
     if(p == null || q == null) return false;
     if (p.val != q.val) return false;
        bool leftSame  = IsSameTree(p.left,  q.left);
        bool rightSame = IsSameTree(p.right, q.right);
        return leftSame && rightSame;
    }
    }
